{"ast":null,"code":"var _jsxFileName = \"/Users/olapejuomoseni/Test folder/course_work02/Strangers-Things/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { getAllPosts } from './api';\nimport { ErrorMessage, Login, Messages, Posts, Home } from \"./components/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [content, setContent] = useState(\"\"); // content of a message\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [token, setToken] = useState(\"\");\n  const [user, setUser] = useState({});\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const allPosts = await getAllPosts();\n      setPosts(allPosts);\n    };\n\n    fetchPosts();\n  }, []);\n  console.log(posts); // have a use effect (use for fetching data). Use the use effect to grab the funtion in API\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/login\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/messages\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts\",\n        element: /*#__PURE__*/_jsxDEV(Posts, {\n          posts: posts,\n          setPosts: setPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/messages\",\n        element: /*#__PURE__*/_jsxDEV(Messages, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"3sEuJxavL2sw/L2Q7F0gC4p3QUE=\");\n\n_c = App;\nlet appElement = document.getElementById('app');\nconst root = ReactDOM.createRoot(appElement);\nroot.render( /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 13\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","BrowserRouter","Router","Routes","Route","Link","getAllPosts","ErrorMessage","Login","Messages","Posts","Home","App","posts","setPosts","content","setContent","isLoggedIn","setIsLoggedIn","token","setToken","user","setUser","fetchPosts","allPosts","console","log","appElement","document","getElementById","root","createRoot","render"],"sources":["/Users/olapejuomoseni/Test folder/course_work02/Strangers-Things/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route, Link } from 'react-router-dom';\nimport { getAllPosts } from './api';\nimport { ErrorMessage, Login, Messages, Posts, Home } from \"./components/index\"\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [content, setContent] = useState(\"\"); // content of a message\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [token, setToken] = useState(\"\");\n    const [user, setUser] = useState({});\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            const allPosts = await getAllPosts()\n            setPosts(allPosts);\n        }\n        fetchPosts()\n    }, [])\n    console.log(posts)\n    // have a use effect (use for fetching data). Use the use effect to grab the funtion in API\n\n    return (\n        <div>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/posts\">Posts</Link>\n            <Link to=\"/messages\">Messages</Link>\n\n            <Routes>\n                <Route path=\"/login\" element={<Login />} />\n                <Route path=\"/posts\" element={<Posts posts={posts} setPosts={setPosts} />} />\n                <Route path=\"/messages\" element={<Messages />} />\n                <Route path=\"*\" element={<ErrorMessage />} />\n            </Routes>\n\n        </div>\n    );\n}\n\n\nlet appElement = document.getElementById('app');\nconst root = ReactDOM.createRoot(appElement);\nroot.render(<Router><App /></Router>);\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,IAA/C,QAA2D,oBAA3D;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EACd,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,EAAD,CAAtC,CAFc,CAE8B;;EAC5C,MAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;EAEAC,SAAS,CAAC,MAAM;IACZ,MAAMwB,UAAU,GAAG,YAAY;MAC3B,MAAMC,QAAQ,GAAG,MAAMlB,WAAW,EAAlC;MACAQ,QAAQ,CAACU,QAAD,CAAR;IACH,CAHD;;IAIAD,UAAU;EACb,CANQ,EAMN,EANM,CAAT;EAOAE,OAAO,CAACC,GAAR,CAAYb,KAAZ,EAdc,CAed;;EAEA,oBACI;IAAA,wBACI,QAAC,IAAD;MAAM,EAAE,EAAC,QAAT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,IAAD;MAAM,EAAE,EAAC,QAAT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI,QAAC,IAAD;MAAM,EAAE,EAAC,WAAT;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAKI,QAAC,MAAD;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,OAAO,eAAE,QAAC,KAAD;UAAO,KAAK,EAAEA,KAAd;UAAqB,QAAQ,EAAEC;QAA/B;UAAA;UAAA;UAAA;QAAA;MAA9B;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,OAAO,eAAE,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA;MAAjC;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII,QAAC,KAAD;QAAO,IAAI,EAAC,GAAZ;QAAgB,OAAO,eAAE,QAAC,YAAD;UAAA;UAAA;UAAA;QAAA;MAAzB;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAhCD;;GAAMF,G;;KAAAA,G;AAmCN,IAAIe,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAjB;AACA,MAAMC,IAAI,GAAG9B,QAAQ,CAAC+B,UAAT,CAAoBJ,UAApB,CAAb;AACAG,IAAI,CAACE,MAAL,eAAY,QAAC,MAAD;EAAA,uBAAQ,QAAC,GAAD;IAAA;IAAA;IAAA;EAAA;AAAR;EAAA;EAAA;EAAA;AAAA,QAAZ"},"metadata":{},"sourceType":"module"}