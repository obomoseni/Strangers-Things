{"ast":null,"code":"export const BASE_URL = \"https://strangers-things.herokuapp.com/api/\";\nexport const COHORT_NAME = \"2206-FTB-ET-WEB-FT-B\";\nexport const API_URL = BASE_URL + COHORT_NAME;\nexport const getAllPosts = async () => {\n  try {\n    const response = await fetch(`${API_URL}/posts`);\n    const result = await response.json();\n    return result.data.posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const addPosts = async data => {\n  try {\n    console.log(data);\n    const response = await fetch(`${API_URL}/posts`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify({\n        post: {\n          title: data.title,\n          description: data.description,\n          price: data.price\n        }\n      })\n    });\n    const result = await response.json();\n    console.log('This is my result', result);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const deletePosts = async POST_ID => {\n  try {\n    const response = await fetch(`${API_URL}/posts/${POST_ID}`, {\n      method: \"DELETE\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const userFunc = async () => {\n  try {\n    const response = await fetch(`${API_URL}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    const result = await response.json();\n    console.log('This is it', result);\n    return result.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const registerUser = async user => {\n  try {\n    const response = await fetch(`${API_URL}/users/register`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    console.log('This is my result', result);\n    return result.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const logInUser = async user => {\n  try {\n    const response = await fetch(`${API_URL}/users/login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user\n      })\n    });\n    const result = await response.json();\n    console.log('This is my result', result);\n    return result.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\nexport const editPost = async POST_ID => {\n  try {\n    const response = await fetch(`${API_URL}/posts/${POST_ID}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify()\n    });\n    console.log('My response', response);\n    const result = await response.json();\n  } catch (error) {\n    console.error(error);\n  }\n};","map":{"version":3,"names":["BASE_URL","COHORT_NAME","API_URL","getAllPosts","response","fetch","result","json","data","posts","error","console","addPosts","log","method","headers","localStorage","getItem","body","JSON","stringify","post","title","description","price","deletePosts","POST_ID","userFunc","registerUser","user","logInUser","editPost"],"sources":["/Users/olapejuomoseni/Test folder/course_work02/Strangers-Things/src/api/index.js"],"sourcesContent":["export const BASE_URL = \"https://strangers-things.herokuapp.com/api/\";\nexport const COHORT_NAME = \"2206-FTB-ET-WEB-FT-B\";\nexport const API_URL = BASE_URL + COHORT_NAME;\n\nexport const getAllPosts = async () => {\n    try {\n\n        const response = await fetch(`${API_URL}/posts`);\n        const result = await response.json();\n        return result.data.posts;\n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const addPosts = async (data) => {\n    try {\n        console.log(data);\n        const response = await fetch(`${API_URL}/posts`,{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: data.title,\n                    description: data.description,\n                    price: data.price\n                }\n            }),\n        }) \n        const result = await response.json();\n        console.log('This is my result', result);\n        \n    } catch (error) {\n       console.error(error) \n    }\n\n}\n\nexport const deletePosts = async (POST_ID) => {\n    try {\n        const response = await fetch(`${API_URL}/posts/${POST_ID}`,{\n            method: \"DELETE\",\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        console.log(response)\n        \n    } catch (error) {\n       console.error(error) \n    }\n}\n\nexport const userFunc = async () => {\n    try {\n        const response = await fetch(`${API_URL}/users/me`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        })\n        const result = await response.json();\n        console.log('This is it', result);\n        return result.data;\n        \n    } catch (error) {\n       console.error(error) \n    }\n}\n\nexport const registerUser = async (user) => {\n    try {\n        const response = await fetch(`${API_URL}/users/register`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user\n            })\n        })\n        const result = await response.json();\n        console.log('This is my result', result);\n        return result.data;\n\n    } catch (error) {\n        console.error(error);\n    }\n} \n\nexport const logInUser = async (user) => {\n    try {\n        const response = await fetch(`${API_URL}/users/login`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user\n            })\n        })\n        const result = await response.json();\n        console.log('This is my result', result);\n        return result.data;\n        \n    } catch (error) {\n        console.error(error);\n    }\n}\n\nexport const editPost = async (POST_ID) => {\n    try {\n        const response = await fetch(`${API_URL}/posts/${POST_ID}`, {\n           method: \"PATCH\",\n           headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n           },\n           body: JSON.stringify() \n        });\n        console.log('My response', response);\n        const result= await response.json();\n    } catch (error) {\n        console.error(error);\n    }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}